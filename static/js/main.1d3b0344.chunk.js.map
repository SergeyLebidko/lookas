{"version":3,"sources":["components/common/Preloader/Preloader.js","content/images/main_back.jpg","utils/context.js","components/common/DealCard/DealCard.js","content/images/design.jpg","content/images/decor.jpg","content/images/restoration.jpg","components/common/DealMenu/DealMenu.js","components/pages/Main/Main.js","components/pages/About/About.js","components/pages/Materials/Materials.js","components/pages/Command/Command.js","components/pages/Learn/Learn.js","components/pages/Contacts/Contacts.js","components/common/Separator/Separator.js","constants/settings.js","utils/utils.js","components/App/App.js","utils/hooks.js","index.js"],"names":["PULSAR_RISE_MODE","PULSAR_JUMP_MODE","PULSAR_REMOVE_MODE","CAP_RISE_MODE","CAP_REMOVE_MODE","Preloader","mountContent","hasAllLoad","hidePreloader","useState","mode","setMode","capAnimationCount","useRef","pulsarJumpCount","capClasses","classNames","pulsarClasses","getCapInline","index","left","width","animationDelay","modeSwitcher","current","CAP_COUNT","className","Array","fill","map","_","style","onAnimationEnd","onAnimationIteration","appContext","createContext","DealCard","imgSource","hasSelect","imgLoadHandler","useContext","cardClasses","src","onLoad","MENU_DATA","id","title","design","decor","restoration","DealMenu","selected","setSelected","getItemClasses","onClick","selectHandler","Main","back","About","opacity","Materials","Command","Learn","Contacts","FULL_LINE","Separator","lineType","lineClasses","V_DIRECTION_LIMIT","H_DIRECTION_LIMIT","V_DIRECTION","H_DIRECTION","getDirection","App","appRef","hasContent","setHasContent","hasPreloader","setHasPreloader","imgLoadCount","setImgLoadCount","elementRef","scrollEnabled","line","direction","window","innerWidth","scrollControlData","setScrollControlData","useEffect","oldWidth","addEventListener","wheelHandler","scrollHandler","resizeHandler","removeEventListener","event","deltaY","scrollTo","delta","steps","curScrollLeft","scrollLeft","setTimeout","curWidth","scrollTop","oldData","useScrollControl","ref","overflow","Provider","value","oldValue","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d3b0344.chunk.js","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport \"./Preloader.scss\";\n\nconst PULSAR_RISE_MODE = 'pulsar_rise';\nconst PULSAR_JUMP_MODE = 'pulsar_jump';\nconst PULSAR_REMOVE_MODE = 'pulsar_remove';\n\nconst CAP_RISE_MODE = 'cap_rise';\nconst CAP_REMOVE_MODE = 'cap_remove';\n\nconst CAP_COUNT = 10;\nconst JUMP_MIN_LIMIT = 3;\n\nfunction Preloader({mountContent, hasAllLoad, hidePreloader}) {\n    const [mode, setMode] = useState(CAP_RISE_MODE);\n\n    const capAnimationCount = useRef(0);\n    const pulsarJumpCount = useRef(0);\n\n    const capClasses = classNames(\n        'preloader__cap_element',\n        {\n            'preloader__raised_cap_element': mode === CAP_RISE_MODE,\n            'preloader__removed_cap_element': mode === CAP_REMOVE_MODE\n        }\n    );\n\n    const pulsarClasses = classNames(\n        'preloader__pulsar',\n        {\n            'preloader__rised_pulsar': mode === PULSAR_RISE_MODE,\n            'preloader__jumped_pulsar': mode === PULSAR_JUMP_MODE,\n            'preloader__removed_pulsar': mode === PULSAR_REMOVE_MODE\n        }\n    );\n\n    const getCapInline = index => ({\n        left: `${index * (100 / CAP_COUNT)}%`,\n        width: `calc(${100 / CAP_COUNT}% + 1px)`,\n        animationDelay: `${200 * (index + 3)}ms`\n    });\n\n    const hasPulsar = () => mode === PULSAR_RISE_MODE || mode === PULSAR_JUMP_MODE || mode === PULSAR_REMOVE_MODE;\n\n    const modeSwitcher = () => {\n        if (mode === CAP_RISE_MODE) {\n            capAnimationCount.current += 1;\n            if (capAnimationCount.current === CAP_COUNT) {\n                setMode(PULSAR_RISE_MODE);\n                mountContent();\n                return;\n            }\n        }\n\n        if (mode === PULSAR_RISE_MODE) {\n            setMode(PULSAR_JUMP_MODE);\n            return;\n        }\n\n        if (mode === PULSAR_JUMP_MODE) {\n            pulsarJumpCount.current += 1;\n            if (pulsarJumpCount.current >= JUMP_MIN_LIMIT && hasAllLoad) setMode(PULSAR_REMOVE_MODE);\n            return;\n        }\n\n        if (mode === PULSAR_REMOVE_MODE) {\n            setMode(CAP_REMOVE_MODE);\n            return;\n        }\n\n        if (mode === CAP_REMOVE_MODE) {\n            capAnimationCount.current += 1;\n            if (capAnimationCount.current === (CAP_COUNT * 2)) hidePreloader();\n        }\n    }\n\n    return (\n        <div className=\"preloader\">\n            {Array(CAP_COUNT).fill(true).map(\n                (_, index) =>\n                    <div\n                        key={index}\n                        className={capClasses}\n                        style={getCapInline(index)}\n                        onAnimationEnd={modeSwitcher}\n                    />\n            )}\n            {hasPulsar() &&\n            <div\n                className={pulsarClasses}\n                onAnimationIteration={modeSwitcher}\n                onAnimationEnd={modeSwitcher}\n            />\n            }\n        </div>\n    );\n}\n\nPreloader.propTypes = {\n    mountContent: PropTypes.func,\n    hasAllLoad: PropTypes.bool,\n    hidePreloader: PropTypes.func\n}\n\nexport default Preloader;\n","export default __webpack_public_path__ + \"static/media/main_back.9dfdf953.jpg\";","import {createContext} from \"react\";\n\nexport const appContext = createContext({});","import React, {useContext} from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport {appContext} from \"../../../utils/context\";\nimport \"./DealCard.scss\";\n\nfunction DealCard({imgSource, hasSelect}) {\n    const {imgLoadHandler} = useContext(appContext);\n\n    const cardClasses = classNames('deal_card', {'deal_card_visible': hasSelect});\n\n    return (\n        <div className={cardClasses}>\n            <img src={imgSource} onLoad={imgLoadHandler}/>\n        </div>\n    );\n}\n\nDealCard.propTypes = {\n    imgSource: PropTypes.string,\n    hasSelect: PropTypes.bool\n}\n\nexport default DealCard;","export default __webpack_public_path__ + \"static/media/design.fa2a719c.jpg\";","export default __webpack_public_path__ + \"static/media/decor.45754d7c.jpg\";","export default __webpack_public_path__ + \"static/media/restoration.5565c575.jpg\";","import React, {useState} from \"react\";\nimport classNames from \"classnames\";\nimport DealCard from \"../DealCard/DealCard\";\nimport design from \"../../../content/images/design.jpg\";\nimport decor from \"../../../content/images/decor.jpg\";\nimport restoration from \"../../../content/images/restoration.jpg\";\nimport \"./DealMenu.scss\";\n\nconst MENU_DATA = [\n    {\n        id: 'des',\n        title: 'Дизайн',\n        imgSource: design\n    },\n    {\n        id: 'dec',\n        title: 'Декор',\n        imgSource: decor\n    },\n    {\n        id: 'res',\n        title: 'Реставрация',\n        imgSource: restoration\n    }\n]\n\nfunction DealMenu() {\n    const [selected, setSelected] = useState(null);\n\n    const getItemClasses = id => classNames('deal_menu__item', {'deal_menu_selected_item': id === selected});\n\n    const selectHandler = id => {\n        if (id === selected) {\n            setSelected(null);\n            return;\n        }\n        setSelected(id);\n    }\n\n    return (\n        <>\n            {MENU_DATA.map(\n                ({id, imgSource}) =>\n                    <DealCard\n                        key={id}\n                        imgSource={imgSource}\n                        hasSelect={selected === id}\n                    />\n            )}\n            <ul className=\"deal_menu\">\n                {MENU_DATA.map(\n                    ({id, title}) =>\n                        <li\n                            key={id}\n                            className={getItemClasses(id)}\n                            onClick={() => selectHandler(id)}\n                        >\n                            {title}\n                        </li>\n                )}\n            </ul>\n        </>\n    );\n}\n\nexport default DealMenu;","import React, {useContext} from \"react\";\nimport back from \"../../../content/images/main_back.jpg\";\nimport DealMenu from \"../../common/DealMenu/DealMenu\";\nimport {appContext} from \"../../../utils/context\";\nimport \"./Main.scss\";\n\nfunction Main() {\n    const {imgLoadHandler} = useContext(appContext);\n\n    return (\n        <section className=\"main\">\n            <img src={back} className=\"main__back\" onLoad={imgLoadHandler}/>\n            <h1 className=\"main__title\">Tanya Lookas</h1>\n            <DealMenu/>\n        </section>\n    );\n}\n\nexport default Main;","import React from \"react\";\nimport \"./About.scss\";\n\nfunction About() {\n    return (\n        // TODO Текст временно скрыт\n        <section className=\"about\">\n            <h1 style={{opacity: 0}}>Привет! Меня зовут Таня!</h1>\n            <p style={{opacity: 0}}>Я дизайнер-декоратор с более чем десятилетним опытом работы</p>\n        </section>\n    );\n}\n\nexport default About;","import React from \"react\";\nimport \"./Materials.scss\";\n\nfunction Materials() {\n    return (\n        <section className=\"materials\">\n            <h1>Я работаю с самыми разными материалами</h1>\n            <p>Картон. Гипс. Штукатурка. Полимерная глина. Акрил. Пенопласт. Металл. Дерево. И это далеко не всё... ;)</p>\n        </section>\n    );\n}\n\nexport default Materials;","import React from \"react\";\nimport \"./Command.scss\";\n\nfunction Command() {\n\n    return (\n        <section className=\"command\">\n            <h1>Вокруг меня коллектив профессионалов</h1>\n            <p>\n                Я работаю в команде с флористами, фотографами, ведущими, осветителями,\n                другими дизайнерами, настоящими мастерами своего дела\n            </p>\n        </section>\n    );\n}\n\nexport default Command;","import React from \"react\";\nimport \"./Learn.scss\";\n\nfunction Learn() {\n    return (\n        <section className=\"learn\">\n            <h1>Я постоянно прокачиваю свои навыки</h1>\n            <p>Участвую в семинарах, конференциях, мастер-классах. Учусь сама и учу других.</p>\n        </section>\n    );\n}\n\nexport default Learn;","import React from \"react\";\nimport \"./Contacts.scss\";\n\nfunction Contacts() {\n    return (\n        <section className=\"contacts\">\n            <h1>Связаться со мной можно тут</h1>\n            <p>...здесь будет список ссылок на vk, instagram, telegram, whatsapp, email...</p>\n        </section>\n    );\n}\n\nexport default Contacts;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport \"./Separator.scss\";\n\nexport const FULL_LINE = 'full_line';\nexport const SHORT_LINE = 'large_line';\n\nfunction Separator({title, lineType}) {\n    const lineClasses = classNames(\n        'separator__line',\n        {\n            'separator__line_full_line': lineType === FULL_LINE,\n            'separator__short_full_line': lineType === SHORT_LINE\n        }\n    );\n\n    return (\n        <div className=\"separator\">\n            <div className={lineClasses}/>\n            <span className=\"separator__title\">{title}</span>\n        </div>\n    );\n}\n\nSeparator.propTypes = {\n    title: PropTypes.string,\n    lineType: PropTypes.string\n}\n\nexport default Separator;","export const IMG_COUNT = 4;\n\n// Граница изменения направления\nexport const V_DIRECTION_LIMIT = 1023;\nexport const H_DIRECTION_LIMIT = 1024;\n\n// Константы направления\nexport const V_DIRECTION = 'v_direction';\nexport const H_DIRECTION = 'h_direction';\n\n// Параметры горизонтального скролла\nexport const SCROLL_DELTA = 2;\nexport const SCROLL_TIMING = 10;\nexport const SCROLL_STEPS_LIMIT = 30;","import {H_DIRECTION_LIMIT, V_DIRECTION_LIMIT, H_DIRECTION, V_DIRECTION} from \"../constants/settings\";\n\nexport function getDirection(width) {\n    if (width <= V_DIRECTION_LIMIT) return V_DIRECTION;\n    if (width >= H_DIRECTION_LIMIT) return H_DIRECTION;\n    return null;\n}","import React, {useRef, useState} from \"react\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport Main from \"../pages/Main/Main\";\nimport About from \"../pages/About/About\";\nimport Materials from \"../pages/Materials/Materials\";\nimport Command from \"../pages/Command/Command\";\nimport Learn from \"../pages/Learn/Learn\";\nimport Contacts from \"../pages/Contacts/Contacts\";\nimport Separator, {FULL_LINE} from \"../common/Separator/Separator\";\nimport {appContext} from \"../../utils/context\";\nimport {IMG_COUNT} from \"../../constants/settings\";\nimport {useScrollControl} from \"../../utils/hooks\";\nimport \"./App.scss\";\n\nfunction App() {\n    const appRef = useRef(null);\n\n    const [hasContent, setHasContent] = useState(false);\n    const [hasPreloader, setHasPreloader] = useState(true);\n\n    const [imgLoadCount, setImgLoadCount] = useState(0);\n\n    const mountContent = () => setHasContent(true);\n    const imgLoadHandler = () => setImgLoadCount(oldValue => oldValue + 1);\n    const hidePreloader = () => setHasPreloader(false);\n\n    const {line, direction} = useScrollControl(appRef, !hasPreloader);\n\n    return (\n        <div className=\"app\" ref={appRef} style={hasPreloader ? {overflow: 'hidden'} : {}}>\n            <appContext.Provider value={{hasPreloader, line, direction, imgLoadHandler}}>\n                {hasContent &&\n                <>\n                    <Main/>\n                    <Separator title=\"01\" lineType={FULL_LINE}/>\n                    <About/>\n                    <Separator title=\"02\" lineType={FULL_LINE}/>\n                    <Materials/>\n                    <Separator title=\"03\" lineType={FULL_LINE}/>\n                    <Command/>\n                    <Separator title=\"04\" lineType={FULL_LINE}/>\n                    <Learn/>\n                    <Separator title=\"05\" lineType={FULL_LINE}/>\n                    <Contacts/>\n                </>\n                }\n            </appContext.Provider>\n            {hasPreloader &&\n            <Preloader\n                mountContent={mountContent}\n                hasAllLoad={IMG_COUNT === imgLoadCount}\n                hidePreloader={hidePreloader}\n            />\n            }\n        </div>\n    );\n}\n\nexport default App;\n","import {useEffect, useState} from \"react\";\nimport {\n    V_DIRECTION_LIMIT,\n    H_DIRECTION_LIMIT,\n    V_DIRECTION,\n    H_DIRECTION,\n    SCROLL_STEPS_LIMIT,\n    SCROLL_TIMING,\n    SCROLL_DELTA\n} from \"../constants/settings\";\nimport {getDirection} from \"./utils\";\n\nexport function useScrollControl(elementRef, scrollEnabled) {\n    const [scrollControlData, setScrollControlData] = useState(\n        {\n            line: 0,\n            direction: getDirection(window.innerWidth)\n        }\n    );\n\n    useEffect(() => {\n        if (!elementRef.current) return;\n\n        function wheelHandler(event) {\n            if (!scrollEnabled || window.innerWidth <= V_DIRECTION_LIMIT) return;\n\n            // В силу определенных ограничений функции scrollTo из JS, я решил написать свой вариант этой функции\n            function scrollTo(delta, steps = 0) {\n                const curScrollLeft = elementRef.current.scrollLeft;\n                elementRef.current.scrollLeft += delta;\n                if (elementRef.current.scrollLeft !== curScrollLeft && steps < SCROLL_STEPS_LIMIT) {\n                    setTimeout(() => scrollTo(delta, steps + 1), SCROLL_TIMING);\n                }\n            }\n\n            const {deltaY} = event;\n            if (deltaY < 0) scrollTo(-SCROLL_DELTA,);\n            if (deltaY > 0) scrollTo(SCROLL_DELTA,);\n        }\n\n        let oldWidth = window.innerWidth;\n\n        function resizeHandler() {\n            const curWidth = window.innerWidth;\n            const f1 = oldWidth <= V_DIRECTION_LIMIT && curWidth >= H_DIRECTION_LIMIT;\n            const f2 = oldWidth >= H_DIRECTION_LIMIT && curWidth <= V_DIRECTION_LIMIT;\n            if (f1 || f2) {\n                elementRef.current.scrollLeft = 0;\n                elementRef.current.scrollTop = 0;\n            }\n            oldWidth = curWidth;\n            setScrollControlData({line: 0, direction: getDirection(curWidth)});\n        }\n\n        function scrollHandler() {\n            const line = elementRef.current.scrollTop + elementRef.current.scrollLeft;\n            setScrollControlData(oldData => ({...oldData, line}));\n        }\n\n        elementRef.current.addEventListener('mousewheel', wheelHandler);\n        elementRef.current.addEventListener('scroll', scrollHandler);\n        window.addEventListener('resize', resizeHandler);\n\n        return () => {\n            elementRef.current.removeEventListener('mousewheel', wheelHandler);\n            elementRef.current.removeEventListener('scroll', scrollHandler);\n            window.removeEventListener('resize', resizeHandler);\n        }\n    }, [scrollEnabled]);\n\n    return scrollControlData;\n}\n\n// TODO Тестовый хук определения видимости элемента (раздела) сайта\nexport function useElementVisible(elementRef, elementName, line, direction) {\n    useEffect(() => {\n        if (!elementRef.current) return;\n        const {innerWidth, innerHeight} = window;\n        const {x, y, width, height} = elementRef.current.getBoundingClientRect();\n\n        if (direction === V_DIRECTION) {\n            console.log(y < innerHeight && (y + height) > 0 ? `${elementName} виден` : `${elementName} не виден`);\n        }\n        if (direction === H_DIRECTION) {\n            console.log(x < innerWidth && (x + width) > 0 ? `${elementName} виден` : `${elementName} не виден`);\n        }\n    }, [line, direction]);\n}","import React from \"react\";\nimport {render} from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./style/init.scss\";\n\nrender(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}